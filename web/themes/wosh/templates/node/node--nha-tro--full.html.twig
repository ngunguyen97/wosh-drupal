{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{{ attach_library('wosh/slick') }}
{%
  set classes = [
  'node',
  'node--type-' ~ node.bundle|clean_class,
  node.isPromoted() ? 'node--promoted',
  node.isSticky() ? 'node--sticky',
  not node.isPublished() ? 'node--unpublished',
  view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  'py-5'
]
%}

<section class="boarding-house-slider regular slider">
  {% for item in content.field_nha_tro_galleries['#items'] %}
    <div>
      <img src="{{file_url(item.entity.fileuri)}}">
    </div>
  {% endfor %}

</section>


<div{{ attributes.addClass(classes) }}>

  <div class="row">
   <div class="col-md-8">
     <div class="content-wrapper">
       <h1{{ title_attributes }}>
         <strong>{{ label }}</strong>
       </h1>
        <div class="content-location">
          <span class="ion-compass"></span>
          <span class="field-content-label">{{ content.field_nha_tro_dia_chi }}</span>
          {#{{ source(directory ~ '/assets/images/svg/beauty.svg') }}#}

        </div>
       <div class="content-acreage">
        <span class="ion-ios-home-outline"></span>
         <span class="field-content-label" style="display: inherit"> {{ 'Diện Tích'|trans }}  <span style="margin: 0 7px">{{ content.field_nha_tro_dien_tich }}</span> /m2</span>
       </div>
       {% if content|render %}
         <div{{ content_attributes.addClass('node-content') }}>
           {{ content|without('field_nha_tro_thumbnail', 'field_nha_tro_dia_chi', 'field_nha_tro_dien_tich', 'field_nha_tro_num_gia', 'field_nha_tro_galleries', 'field_nha_tro_trang_thai') }}
         </div>
       {% endif %}
     </div>
   </div>
    <div class="col-md-4">
      <div class="is-shadow-box-2">
      <div class="sidebar-wrapper px-3 py-3">
        <div class="sidebar-field-price">
          <strong>{{ content.field_nha_tro_num_gia.0['#markup']|number_format(0,',','.') }}đ</strong>
          <span>/{{ 'Tháng'|trans }}</span>
        </div>
        <div class="btn-wrapper py-3">
          {% if  user.id != 0 %}
          <a href="/checkout/?nid={{ node.id }}" id="addtocard-btn" class="btn btn-primary btn-block rounded">
            <span class="ion-flash"></span>
            {{ 'Đặt ngay'|trans }}</a>
          {% else %}
            <a href="/user/login/?destination=/node/{{ node.id }}" id="addtocard-btn" class="btn btn-primary btn-block rounded">
              <span class="ion-flash"></span>
              {{ 'Đăng nhập ngay'|trans }}</a>
          {% endif %}
        </div>
      </div>
        <hr>
       <div class="room-sidebar__host px-3 py-4">
         <div class="room-owner">
           <span class="ion-ios-contact-outline"></span>
           <div class="author-infor">
             <span class="author-name" style="font-size: 20px;">{{ author_name }}</span>
             <div class="date-attend">
                {{ 'Tham gia '|trans }} {{ date }}
             </div>
           </div>
         </div>
       </div>
      </div>
    </div>
  </div>

  <div class="row">
    <div class="boarding-house-related py-5">
      <h3><strong>{{ 'Chỗ ở tương tự'|trans }}</strong></h3>
      {{ drupal_view('danh_sach_nha_tro','block_boarding_house') }}
    </div>
  </div>
</div>

